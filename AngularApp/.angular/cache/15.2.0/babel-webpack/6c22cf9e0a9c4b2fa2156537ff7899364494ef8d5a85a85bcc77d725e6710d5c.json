{"ast":null,"code":"import { StoresService } from '../shared/stores.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/stores.service\";\nimport * as i2 from \"@angular/common\";\nfunction StoresComponent_tr_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function StoresComponent_tr_53_Template_a_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const emp_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onEdit(emp_r7));\n    });\n    i0.ɵɵelementStart(9, \"i\", 22);\n    i0.ɵɵtext(10, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function StoresComponent_tr_53_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const emp_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDelete(emp_r7._id, ctx_r10.employeeForm));\n    });\n    i0.ɵɵelementStart(12, \"i\", 22);\n    i0.ɵɵtext(13, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const emp_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.office);\n  }\n}\nexport class StoresComponent {\n  constructor(storesService) {\n    this.storesService = storesService;\n  }\n  resetForm(form) {\n    if (form) form.reset();\n    this.storesService.selectedStores = {\n      _id: \"\",\n      name: \"\",\n      type: \"\",\n      city: \"\",\n      phone: null\n    };\n  }\n  onSubmit(form) {\n    if (form.value._id == \"\") {\n      this.storesService.postStores(form.value).subscribe(res => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({\n          html: 'Saved successfully',\n          classes: 'rounded'\n        });\n      });\n    } else {\n      this.storesService.putStores(form.value).subscribe(res => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({\n          html: 'Updated successfully',\n          classes: 'rounded'\n        });\n      });\n    }\n  }\n  refreshEmployeeList() {\n    this.storesService.getStoresList().subscribe(res => {\n      this.storesService.stores = res;\n    });\n  }\n  onEdit(emp) {\n    this.storesService.selectedStores = emp;\n  }\n  onDelete(_id, form) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.storesService.deleteStores(_id).subscribe(res => {\n        this.refreshEmployeeList();\n        this.resetForm(form);\n        M.toast({\n          html: 'Deleted successfully',\n          classes: 'rounded'\n        });\n      });\n    }\n  }\n}\nStoresComponent.ɵfac = function StoresComponent_Factory(t) {\n  return new (t || StoresComponent)(i0.ɵɵdirectiveInject(i1.StoresService));\n};\nStoresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StoresComponent,\n  selectors: [[\"app-stores\"]],\n  features: [i0.ɵɵProvidersFeature([StoresService])],\n  decls: 54,\n  vars: 7,\n  consts: [[1, \"row\"], [1, \"col\", \"s12\"], [1, \"card\"], [1, \"card-content\", \"white-text\"], [1, \"col\", \"s5\"], [3, \"ngSubmit\"], [\"storesForm\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"_id\", 3, \"ngModel\", \"ngModelChange\"], [\"_id\", \"ngModel\"], [1, \"input-field\", \"col\", \"s12\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Enter full name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"red-text\"], [\"type\", \"text\", \"name\", \"position\", \"placeholder\", \"Eg : Snr. Developer\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"office\", \"placeholder\", \"Enter office location\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"salary\", \"placeholder\", \"Salary per annum\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-custom\", \"right\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-custom\", \"right\", 3, \"disabled\"], [1, \"col\", \"s7\"], [1, \"responsive-table\", \"highlight\"], [4, \"ngFor\", \"ngForOf\"], [1, \"action-btn\", 3, \"click\"], [1, \"material-icons\"]],\n  template: function StoresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r11 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 0)(5, \"div\", 4)(6, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function StoresComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(8, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function StoresComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.storesService.selectedStores._id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 0)(11, \"div\", 9)(12, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function StoresComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.storesService.selectedStores.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\");\n      i0.ɵɵtext(15, \"Name : \");\n      i0.ɵɵelementStart(16, \"label\", 12);\n      i0.ɵɵtext(17, \"*\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(18, \"div\", 0)(19, \"div\", 9)(20, \"input\", 13, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function StoresComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.employeeService.selectedEmployee.position = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \"Position :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 9)(26, \"input\", 14, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function StoresComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.employeeService.selectedEmployee.office = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"label\");\n      i0.ɵɵtext(29, \"Office :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 0)(31, \"div\", 9)(32, \"input\", 15, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function StoresComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.employeeService.selectedEmployee.salary = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"label\");\n      i0.ɵɵtext(35, \"Salary :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 0)(37, \"div\", 9)(38, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function StoresComponent_Template_button_click_38_listener() {\n        return ctx.resetForm(ctx.employeeForm);\n      });\n      i0.ɵɵtext(39, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 17);\n      i0.ɵɵtext(41, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(42, \"div\", 18)(43, \"table\", 19)(44, \"thead\")(45, \"tr\")(46, \"th\");\n      i0.ɵɵtext(47, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"th\");\n      i0.ɵɵtext(49, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"th\");\n      i0.ɵɵtext(51, \"Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(53, StoresComponent_tr_53_Template, 14, 3, \"tr\", 20);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.storesService.selectedStores._id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.storesService.selectedStores.name);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.position);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.office);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.salary);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeeService.employees);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["StoresService","i0","StoresComponent","constructor","storesService","resetForm","form","reset","selectedStores","_id","name","type","city","phone","onSubmit","value","postStores","subscribe","res","refreshEmployeeList","M","toast","html","classes","putStores","getStoresList","stores","onEdit","emp","onDelete","confirm","deleteStores","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\uni work\\semester 8\\WebTech\\OEL\\AngularApp\\src\\app\\stores\\stores.component.ts","D:\\uni work\\semester 8\\WebTech\\OEL\\AngularApp\\src\\app\\stores\\stores.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { StoresService } from '../shared/stores.service';\nimport { Stores } from '../shared/stores.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-stores',\n  templateUrl: './stores.component.html',\n  styleUrls: ['./stores.component.css'],\n  providers: [StoresService]\n})\nexport class StoresComponent {\n\n  constructor(private storesService: StoresService) { }\n\n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.storesService.selectedStores = {\n      _id: \"\",\n      name: \"\",\n      type: \"\",\n      city: \"\",\n      phone: null\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.storesService.postStores(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    }\n    else {\n      this.storesService.putStores(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshEmployeeList() {\n    this.storesService.getStoresList().subscribe((res) => {\n      this.storesService.stores = res as Stores[];\n    });\n  }\n\n  onEdit(emp: Stores) {\n    this.storesService.selectedStores = emp;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.storesService.deleteStores(_id).subscribe((res) => {\n        this.refreshEmployeeList();\n        this.resetForm(form);\n        M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n}","<div class=\"row\">\n    <div class=\"col s12\">\n      <div class=\"card\">\n        <div class=\"card-content white-text\">\n          <div class=\"row\">\n            <div class=\"col s5\">\n              <form #storesForm=\"ngForm\" (ngSubmit)=\"onSubmit(storesForm)\">\n                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"storesService.selectedStores._id\">\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"storesService.selectedStores.name\" placeholder=\"Enter full name\" required>\n                    <label>Name :\n                      <label class=\"red-text\">*</label>\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"position\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.position\" placeholder=\"Eg : Snr. Developer\">\n                    <label>Position :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"office\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.office\" placeholder=\"Enter office location\">\n                    <label>Office :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"salary\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.salary\" placeholder=\"Salary per annum\">\n                    <label>Salary :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(employeeForm)\">Reset</button>\n                    <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!employeeForm.valid\">Submit</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"col s7\">\n                <table class=\"responsive-table highlight\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Position</th>\n                        <th>Office</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tr *ngFor=\"let emp of employeeService.employees\">\n                      <td>{{emp.name}}</td>\n                      <td>{{emp.position}}</td>\n                      <td>{{emp.office}}</td>\n                      <td>\n                          <a class=\"action-btn\" (click)=\"onEdit(emp)\">\n                            <i class=\"material-icons\">edit</i>\n                          </a>\n                          <a class=\"action-btn\" (click)=\"onDelete(emp._id,employeeForm)\">\n                            <i class=\"material-icons\">delete</i>\n                          </a>\n                        </td>\n                    </tr>\n                  </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}